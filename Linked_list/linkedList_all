#include<bits/stdc++.h>
using namespace std;
struct Node
{
    int data;
    Node * next;
};
typedef Node node;
node *head = NULL, *ptr = NULL;
node *getNode(int data)
{
    node *temp = (node*) malloc (sizeof (node));
    temp->data = data;
    temp->next = NULL;
    return temp;
}
void createNode(int a[], int n)
{
    for(int i=0; i<n; i++)
    {
        if(head == NULL)
        {
            head = getNode(a[i]);
            ptr = head;
        }
        else
        {
            ptr->next = getNode(a[i]);
            ptr = ptr->next;
        }
    }
}
void traverse()
{
    node * temp = head;
    while(temp !=NULL)
    {
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}
node *insert_in_first_position(int item, node *temp)
{
    node *newnodes = getNode(item);
    newnodes->next = temp;
    return newnodes;
}
void insert_in_last_position(int item)
{
    ptr->next = getNode(item);
    ptr = ptr->next;
}
void insert_in_nth_position(int item,int pos)
{
    node *t2,*t1;
    t1 = head ;
    t2 = t1;
    int i = 1;
    while(i<pos)
    {
        t2 = t1;
        t1 = t1->next;
        i++;
    }
    node *temp = getNode(item);
    t2->next = temp;
    temp->next = t1;
}
void delete_last_node()
{
    node *t2,*t1;
    t1 = head;
    t2 = t1;
    while(t1->next!=NULL)
    {
        t2 = t1;
        t1 = t1->next;
    }
    t2->next = NULL;
}
void delete_first_node()
{
    head = head->next;
}
void delete_nth_position_node(int pos)
{
    node *t1,*t2;
    t1 = head;
    t2 = t1;
    int i= 1;
    while(i<pos)
    {
        t2 = t1;
        t1 = t1->next;
        i++;
    }
    t2->next = t1->next;
}
int search_item_in_linkedlist(int data)
{
    int pos = 1;
    if(head->data == data)
    {
        return pos;
    }
    node * temp = head;

    while(temp != NULL)
    {
        if(temp->data == data)
        {
            return pos;
        }
        temp = temp->next;
        pos++;
    }
    return -1;
}
void sort_data_in_linkedlist()
{
    node *t2,*t1;
    t1 = head;
    while(t1!=NULL)
    {
        t2 = t1->next;
        while(t2 !=NULL)
        {
            if(t1->data > t2->data){
                int temp = t1->data;
                t1->data = t2->data;
                t2->data = temp;
            }
            t2  = t2->next;
        }
        t1 = t1->next;
    }
}
int main()
{
    int a[] = {1,3,5,4,2};
    createNode(a,5);
    traverse();
    node * p = head;
    head = insert_in_first_position(7,p);
    traverse();
    insert_in_last_position(9);
    traverse();
    insert_in_nth_position(8,5);
    traverse();
    delete_last_node();
    traverse();
    delete_first_node();
    traverse();
    delete_nth_position_node(4);
    traverse();
    int pos = search_item_in_linkedlist(5);
    if(pos == -1)
    {
        cout<<"Item is not found "<<endl;
    }
    else
    {
        cout<<"Item is found in the pos: "<<pos<<endl;
    }
    sort_data_in_linkedlist();
    traverse();

}
